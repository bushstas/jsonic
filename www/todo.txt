------------------------------

{for &a = 3 to &a.length step 6}

{/for}

------------------------------

ошибка если else/ifempty в начале / конце шаблона (вне тегов)

------------------------------

проверить Decliner/Dates/... на включаемость / исключаемость когда используется / не используется

------------------------------

{decline ~quantity 'item'}

------------------------------

{random 2}
	<div>1</div>
	<div>2</div>
	<div>3</div>
{/random}

------------------------------
	
foreach random

------------------------------

class="*" class="*title" - имя класса элемента по названию класса компонента

------------------------------

обфускация названий реактивных пропсов

------------------------------

prototype.g --- запретить переопределение function g() {}

------------------------------

файлы .ext 
User.ext - доп методы для классов 

------------------------------

тип класса processor 

------------------------------

$ от case переходят в switch и if 

------------------------------

{use [1,'34543543']} в шаблонах

------------------------------

{$a:Corrector}

------------------------------

{loading} ... {then} ... {/then} => {if !$loaded} ... {else} ... {/if}

------------------------------

each () {
	each () {

	}
}

------------------------------

delay () {
	delay () {

	}
}

------------------------------

{$:var} переменные Globals

------------------------------

onClick=":stop"

------------------------------

onClick=":prevent"

------------------------------

{.template .a as .b}  this.setState('b');

------------------------------

arg-className="frameless" в шаблоне Keywords не обфусцируется

------------------------------

неверный вывод ошибок в шаблонах include (не определен класс)

------------------------------

{from &i = 10 to 20 step 1}

------------------------------

внедрить {ifempty} внутрь FOREACH

------------------------------

запилить геттеры и сеттеры

------------------------------

?~var = (!!~var?~var:'')
? ~var = (!!~var?' '+~var:'')
?~var:~b = (!!~var?~var:~b)

------------------------------

User.aaa()

------------------------------

Dictionary.aaa()

------------------------------

5*#data -> error
5*#data['aaa'] -> not error

------------------------------

$func(), ~func()

------------------------------

реализовать кастомные валидаторы

------------------------------

<component childClass="{class:Favorites}">

------------------------------

<component class="DataTableTabPanel" userName="{user:name}">
<component class="DataTableTabPanel" userName="{user:isAutorized()}">

------------------------------

<component class="DataTableTabPanel" city="{dict:cities[22]}">

------------------------------

<component class="DataTableTabPanel" cityTempl="{template:city}">
<component class="DataTableTabPanel" cityTempl="{template:#city}"> by key
<div>
	{~cityTempl->}
</div>

------------------------------

^comp - валидировать есть ли в шаблоне компонент с таким id

------------------------------

запилить JS константы

------------------------------

запретить вызвать например .render() из шаблона 

------------------------------

Ошибка вызова метода df класса DataTable из его шаблона. Метод не найден -> выводить код элемента

------------------------------

запилить реактивный let

-----------------------------
ошибка тегов на разных уровнях 

<div>
	<span>
</div>
<div>
	</span>
</div>

----------------------------